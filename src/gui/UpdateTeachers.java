package gui;

import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import model.MySQL;
import raven.toast.Notifications;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author User
 */
public class UpdateTeachers extends javax.swing.JDialog {

    private HashMap<String, String> subjectMap = new HashMap<>();
    private HashMap<String, String> cityMap = new HashMap<>();

    String teacherID;
    TeacherPanel teacherPanel;

    /**
     * Creates new form UpdateTeachers
     */
    public UpdateTeachers(java.awt.Frame parent, boolean modal, String teacherID, TeacherPanel teacherPanel) {
        super(parent, modal);
        initComponents();
        this.teacherID = teacherID;
        this.teacherPanel = teacherPanel;
        loadCitys();
        loadSubject();
        loadTeacherDetails(teacherID);
    }

    //Load teacher Deails
    private void loadTeacherDetails(String studentID) {

        String quary = "SELECT * FROM `teacher` "
                + "INNER JOIN `address` ON `teacher`.`Address_id` = `address`.`id` "
                + "INNER JOIN `city` ON `address`.`City_id` = `city`.`id` "
                + "INNER JOIN `subject` ON `teacher`.`Subject_Subno` = `subject`.`Subno`"
                + "WHERE `teacher`.`Tno` = ?";

        try {
            ResultSet result = MySQL.executeSelect(quary, studentID);

            if (result.next()) {

                jTextField1.setText(result.getString("teacher.Name"));

                if (result.getInt("Gender_id") == 1) {
                    jRadioButton1.setSelected(true);
                } else if (result.getInt("Gender_id") == 2) {
                    jRadioButton2.setSelected(true);
                }

                jComboBox2.setSelectedItem(result.getString("subject.Subno") + " / " + result.getString("subject.name") + " /" + result.getString("Description"));

                jTextField3.setText(result.getString("address.line1"));
                jTextField4.setText(result.getString("address.line2"));
                jComboBox1.setSelectedItem(result.getString("city.city"));

            } else {
                JOptionPane.showMessageDialog(this, "Can't Find the student. Please try again.", "Warning", JOptionPane.WARNING_MESSAGE);
                this.dispose();
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }

    }
    //Load teacher Deails

    //Load Subject
    private void loadSubject() {

        String quary = "SELECT * FROM `subject`";

        try {
            ResultSet result = MySQL.executeSelect(quary);
            Vector<String> vector = new Vector<>();
            vector.add("Select");
            while (result.next()) {

                vector.add(result.getString("subject.Subno") + " / " + result.getString("subject.name") + " /" + result.getString("Description"));
                subjectMap.put(result.getString("subject.Subno") + " / " + result.getString("subject.name") + " /" + result.getString("Description"), result.getString("subject.Subno"));
            }
            jComboBox2.setModel(new DefaultComboBoxModel(vector));
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }
    //Load Subject

    // Load Citys
    private void loadCitys() {

        String quary = "SELECT * FROM `city`";
        try {
            ResultSet result = MySQL.executeSelect(quary);
            Vector<String> vector = new Vector<>();
            vector.add("Select");
            while (result.next()) {
                vector.add(result.getString("city.city"));
                cityMap.put(result.getString("city.city"), result.getString("city.id"));
            }
            jComboBox1.setModel(new DefaultComboBoxModel<>(vector));
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
// Load Citys

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel2.setText("Name :");

        jTextField1.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel8.setText("Gender :");

        jRadioButton1.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jRadioButton1.setText("Male");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jRadioButton2.setText("Female");

        jLabel9.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel9.setText("Subject Name :");

        jLabel3.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel3.setText("Address Line 1 :");

        jTextField3.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel4.setText("Address Line 2 :");

        jTextField4.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel5.setText("City :");

        jComboBox1.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField1))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField4))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jRadioButton1)
                            .addGap(18, 18, 18)
                            .addComponent(jRadioButton2)
                            .addGap(35, 35, 35)
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBox2, 0, 427, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField3))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jRadioButton1)
                        .addComponent(jRadioButton2)
                        .addComponent(jLabel9)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Update Teacher");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (jTextField1.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Please Enter Teacher's Name.", "Warring", JOptionPane.WARNING_MESSAGE);
        } else if (!jRadioButton1.isSelected() && !jRadioButton2.isSelected()) {
            JOptionPane.showMessageDialog(this, "Please Select Teaacher's Gender Please.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (jComboBox2.getSelectedItem().equals("Select")) {
            JOptionPane.showMessageDialog(this, "Please Select Tha Subject.", "Warring", JOptionPane.WARNING_MESSAGE);
        } else if (jTextField3.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Please Enter Teacher's Address line 1.", "Warring", JOptionPane.WARNING_MESSAGE);
        } else if (jTextField4.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Please Enter Teacher's Address line 2.", "Warring", JOptionPane.WARNING_MESSAGE);
        } else if (jComboBox1.getSelectedItem().equals("Select")) {
            JOptionPane.showMessageDialog(this, "Please Select City.", "Warring", JOptionPane.WARNING_MESSAGE);
        } else {

            String name = jTextField1.getText().trim();
            String gender = null;
            if (jRadioButton1.isSelected()) {
                gender = "1";
            } else if (jRadioButton2.isSelected()) {
                gender = "2";
            }
            String subjectID = subjectMap.get(String.valueOf(jComboBox2.getSelectedItem()));
            String line1 = jTextField3.getText().trim();
            String line2 = jTextField4.getText().trim();
            String city = String.valueOf(jComboBox1.getSelectedItem());

            try {

                String quary1 = "SELECT * FROM `teacher` INNER JOIN `gender` ON `teacher`.`Gender_id` = `gender`.`id` "
                        + "INNER JOIN `address` ON `teacher`.`Address_id` = `address`.`id` "
                        + "INNER JOIN `city` ON `address`.`City_id` = `city`.`id` "
                        + "WHERE `teacher`.`name` = ? AND `gender`.`id` = ? AND `teacher`.`Subject_Subno` = ? AND `address`.`line1` = ? AND `address`.`line2` = ? "
                        + "AND `city`.`city` = ? AND `teacher`.`Tno` = ?";

                ResultSet result1 = MySQL.executeSelect(quary1, name, gender, subjectID, line1, line2, city, teacherID);

                if (result1.next()) {

                    Notifications.getInstance().setJFrame(SplashWindow.spalshWindow);
                    Notifications.getInstance().show(Notifications.Type.WARNING, Notifications.Location.BOTTOM_RIGHT, 10000, "No Chengers to Update. Teacher_ID : " + teacherID);

                } else {

                    String quary = "UPDATE `teacher` INNER JOIN `address` ON `teacher`.`Address_id` = `address`.`id` "
                            + "SET `teacher`.`Name` = ?, `teacher`.`Subject_Subno` = ?, `teacher`.`Gender_id` = ?, `address`.`line1` = ?, "
                            + "`address`.`line2` = ?, `address`.`City_id` = ? WHERE `teacher`.`Tno` = ? ";

                    MySQL.executeUpdate(quary, name, subjectID, gender, line1, line2, cityMap.get(city), teacherID);

                }
            } catch (SQLException e) {

                if (e.getMessage().startsWith("Creating")) {

                    Notifications.getInstance().setJFrame(SplashWindow.spalshWindow);
                    Notifications.getInstance().show(Notifications.Type.SUCCESS, Notifications.Location.BOTTOM_RIGHT, 10000, "Student Details Updated. Teacher ID is : " + teacherID);

                    teacherPanel.loadTeacher();
                    this.dispose();

                } else {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
